@model Catabase.Models.Post
@using Catabase.Views
@using Microsoft.AspNetCore.Identity
@inject SignInManager<CatabaseUser> SignInManager
@inject UserManager<CatabaseUser> UserManager

@{
    ViewData["Title"] = "Details";
}


<div>
    <a style="color:black" href="../../Profiles/Details/@Html.DisplayFor(model=>model.CatabaseUser.Profile.ProfileId)">
    <h4>@Html.DisplayFor(model => model.CatabaseUser.UserName)</h4>
    </a>
    <hr />
    <dl class="row">
        <dt>
            <img height="500" style="border:solid" src="~/Images/@Html.DisplayFor(model => model.ImageUrl)">
        </dt>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Caption)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Caption)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LikeCount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LikeCount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PostTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PostTime)
        </dd>
    </dl>
</div>
<form method="POST" action="@Url.Action("SubmitLike","Likes")">
    <input type="hidden" value="@(Model.PostId)" name="postId" class="btn-primary btn-sm" />
    <button type="submit">

        @if (UserManager.GetUserId(User) != null)
        {

            @if (Model.Likes.Where(p => p.UserId == UserManager.GetUserId(User)).Count() > 0)
            {
                @:Remove

            }
        }
        Like

    </button>
</form>
<form action="@Url.Action("AddComment","Comments")" method="POST">
    <div class="form-actions no-color">
        <p>
            Comment <input type="text" name="commentText"  />
            <input type="hidden" name="postId" value="@Model.PostId"/>
            <input type="submit"  class="btn btn-success" /> 
        </p>
    </div>
</form>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<h2>Comments</h2>
@foreach(var comment in Model.Comments)
{
    if(comment.UserId != null)
    {
        <hr />
    <h4>
        @await UserManager.GetUserNameAsync(await UserManager.FindByIdAsync(comment.UserId))
         
    </h4>
    <p>
    @comment.CommentContent
    </p>
        @if (UserManager.GetUserId(User) != null)
        {
            @if (UserManager.GetUserId(User) == comment.UserId || this.User.IsInRole("Admin"))
            {
                <a asp-controller="Comments" asp-action="Delete" asp-route-id="@comment.CommentId"> Delete </a>
            }
        }
    }
    
}


