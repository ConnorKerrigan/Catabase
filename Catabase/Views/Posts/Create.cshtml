@using System.Text.Encodings.Web;
@model Catabase.Models.Post

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <img id="user_img"
                 height="100"
                 width="90"
                 style="border:solid">
            <div class="form-group">
                <input type="file" title="Choose Image" id="file" name="file" onchange="show(this)" />
            </div>
            <div class="form-group">
                <label asp-for="Caption" class="control-label"></label>
                <input asp-for="Caption" class="form-control" />
                <span asp-validation-for="Caption" class="text-danger"></span>
            </div>
            <div id="myRows"></div>
            <div class="myrow">
                <div class="form-group">
                    <label class="control-label">Cat</label>
                    <div class="col-md-5">
                        @Html.DropDownList("catId[0]", new SelectList(ViewBag.data, "CatId", "Name"), htmlAttributes: new { @class = "form-control CatDropDown"})
                        @Html.ValidationMessageFor(x => x.PostAttributions, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @*<div id="hiddenInputs"></div>
            <p onclick="updateCatArray()">update</p>
            <div class="item-add" >
                <a id="add-row" class="link-button" onclick="newRow()">Add Row</a>
            </div>*@
            @Html.ValidationSummary()
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>
<!--<script type="text/javascript">
    function updateCatArray() {
        alert("hiii");
        cats = [];
        var lists = document.getElementsByClassName("CatDropDown");
        for (i in lists) {
            var ops = lists[i].childNodes;
            //alert(lists[i]);
            //alert("a" + lists[i].options[lists[i].selectedIndex].value);
            //alert("c");
            cats.push(lists[i].options[lists[i].selectedIndex].value);
            
            $("#hiddenInputs").append(`
                    <input type="hidden" value="`lists[i].options[lists[i].selectedIndex].value`" name="catId[` + i + `]" class="btn-primary btn-sm"/>
            `);

            //document.getElementById("arrayInput").value = "["+cats+"]";
        }
    }
</script>-->
<script type="text/javascript">
    var cats = [];
    function newRow() {
        alert("fuck");
        var nextId = $(".myrow").length;


            //figure out how to increment the array index..
        $("#myRows").append(`
                <div class="myrow">
                    <div class="form-group">
                        <label class="control-label">Cat</label>
                        <div class="col-md-5">
    @Html.DropDownList("hi", new SelectList(ViewBag.data, "CatId", "Name"), htmlAttributes: new { @class = "form-control CatDropDown"})
    @Html.ValidationMessageFor(x => x.PostAttributions, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        `);
    }
    
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
